package main

import (
	"fmt"
	"log"

	"github.com/Fernlizer/carbonwize_digital_footprint_backend/config"
	"github.com/Fernlizer/carbonwize_digital_footprint_backend/docs"
	"github.com/Fernlizer/carbonwize_digital_footprint_backend/internal/handler"
	"github.com/Fernlizer/carbonwize_digital_footprint_backend/internal/repository"
	"github.com/Fernlizer/carbonwize_digital_footprint_backend/internal/routes"
	"github.com/Fernlizer/carbonwize_digital_footprint_backend/internal/service"

	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/swagger"
)

func main() {
	// ‡πÇ‡∏´‡∏•‡∏î Config
	cfg, err := config.LoadConfig()
	if err != nil {
		log.Fatal("‚ùå Failed to load config:", err)
	}

	// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Database
	db := config.InitDB(cfg)

	// ‡∏™‡∏£‡πâ‡∏≤‡∏á Repository, Service ‡πÅ‡∏•‡∏∞ Handler
	carbonRepo := repository.NewEmissionRepository(db)
	carbonService := service.NewCarbonService(carbonRepo)
	carbonHandler := handler.NewCarbonHandler(carbonService)

	// ‡∏™‡∏£‡πâ‡∏≤‡∏á Fiber App
	app := fiber.New()

	// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Swagger
	docs.SwaggerInfo.Title = "CarbonWize API"
	docs.SwaggerInfo.Description = "API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì Carbon Footprint"
	docs.SwaggerInfo.Version = "1.0"
	docs.SwaggerInfo.Host = "localhost:" + cfg.AppPort
	docs.SwaggerInfo.BasePath = "/api"

	// ‡πÄ‡∏û‡∏¥‡πà‡∏° Swagger UI
	app.Get("/swagger/*", swagger.HandlerDefault)

	// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Routes
	routes.SetupRoutes(app, carbonHandler)

	// ‡∏£‡∏±‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
	port := fmt.Sprintf(":%s", cfg.AppPort)
	log.Printf("üöÄ Server is running on http://localhost%s", port)
	log.Fatal(app.Listen(port))
}
